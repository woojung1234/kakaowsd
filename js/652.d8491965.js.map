{"version":3,"file":"js/652.d8491965.js","mappings":"6NAKA,GACEA,KAAAA,GACE,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAETC,EAAiBC,UAErB,MAAMC,EAAO,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,QAG7D,GAFAC,QAAQC,IAAI,sBAAuBP,IAE9BA,EAEH,OADAQ,MAAM,uDACCZ,EAAOa,KAAK,WAGrB,IAEE,MAAMC,QAAiBC,EAAAA,EAAMC,KAC3B,sCACA,IAAIX,gBAAgB,CAClBY,WAAY,qBACZC,UAAWC,mCACXC,aAAcD,uDACdf,SAEF,CACEiB,QAAS,CAAE,eAAgB,uCAIzBC,EAAcR,EAASS,KAAKC,aAClCd,QAAQC,IAAI,gBAAiBW,GAC7BG,aAAaC,QAAQ,mBAAoBJ,SAGnCxB,EAAM6B,SAAS,aAAcL,GAGnCtB,EAAOa,KAAK,CAAEe,KAAM,QACtB,CAAE,MAAOC,GACPnB,QAAQmB,MAAM,+BAAgCA,GAC9CjB,MAAM,uCACNZ,EAAOa,KAAK,UACd,GAKF,OAFAX,IAEO,CAAC,CACV,GCnDF,MAAM4B,EAAc,EAEpB,O","sources":["webpack://moviewsd/./src/components/SignIn/AuthCallback.vue","webpack://moviewsd/./src/components/SignIn/AuthCallback.vue?9c61"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    const handleCallback = async () => {\r\n      // 1. Authorization Code 가져오기\r\n      const code = new URLSearchParams(window.location.search).get(\"code\");\r\n      console.log(\"Authorization Code:\", code); // 디버깅용 로그\r\n\r\n      if (!code) {\r\n        alert(\"Authorization code is missing. Please log in again.\");\r\n        return router.push(\"/signin\");\r\n      }\r\n\r\n      try {\r\n        // 2. Kakao Token 요청\r\n        const response = await axios.post(\r\n          \"https://kauth.kakao.com/oauth/token\",\r\n          new URLSearchParams({\r\n            grant_type: \"authorization_code\",\r\n            client_id: process.env.VUE_APP_KAKAO_API_KEY,\r\n            redirect_uri: process.env.VUE_APP_REDIRECT_URI,\r\n            code,\r\n          }),\r\n          {\r\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          }\r\n        );\r\n\r\n        const accessToken = response.data.access_token;\r\n        console.log(\"Access Token:\", accessToken); // 디버깅용 로그\r\n        localStorage.setItem(\"kakaoAccessToken\", accessToken);\r\n\r\n        // 3. Vuex 상태 업데이트\r\n        await store.dispatch(\"kakaoLogin\", accessToken);\r\n\r\n        // 4. 홈 화면으로 리다이렉트\r\n        router.push({ name: \"home\" });\r\n      } catch (error) {\r\n        console.error(\"Kakao Token Exchange Failed:\", error); // 에러 디버깅\r\n        alert(\"Failed to log in. Please try again.\");\r\n        router.push(\"/signin\");\r\n      }\r\n    };\r\n\r\n    handleCallback();\r\n\r\n    return {};\r\n  },\r\n};\r\n</script>\r\n","import script from \"./AuthCallback.vue?vue&type=script&lang=js\"\nexport * from \"./AuthCallback.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["setup","store","useStore","router","useRouter","handleCallback","async","code","URLSearchParams","window","location","search","get","console","log","alert","push","response","axios","post","grant_type","client_id","process","redirect_uri","headers","accessToken","data","access_token","localStorage","setItem","dispatch","name","error","__exports__"],"sourceRoot":""}